// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RepositoryLayer.Data;

#nullable disable

namespace RepositoryLayer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DomainLayer.Models.CentroCostoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CcosCodigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CcosEmpresaId")
                        .HasColumnType("int");

                    b.Property<string>("CcosNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CcosEmpresaId");

                    b.ToTable("CentroCosto");
                });

            modelBuilder.Entity("DomainLayer.Models.CiudadModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CiudCodigo")
                        .HasColumnType("int");

                    b.Property<int>("CiudDeptoId")
                        .HasColumnType("int");

                    b.Property<string>("CiudNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CiudDeptoId");

                    b.ToTable("Ciudad");
                });

            modelBuilder.Entity("DomainLayer.Models.ClaseFacturaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ClfaCodigo")
                        .HasColumnType("int");

                    b.Property<string>("ClfaNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ClaseFactura");
                });

            modelBuilder.Entity("DomainLayer.Models.ClasJuridicaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("JuriCodigo")
                        .HasColumnType("int");

                    b.Property<int>("JuriEstadoOperacion")
                        .HasColumnType("int");

                    b.Property<string>("JuriNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ClasJuridica");
                });

            modelBuilder.Entity("DomainLayer.Models.CoberturaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CobeCodigo")
                        .HasColumnType("int");

                    b.Property<string>("CobeNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Cobertura");
                });

            modelBuilder.Entity("DomainLayer.Models.ConceptoNotaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ConoCodigo")
                        .HasColumnType("int");

                    b.Property<string>("ConoNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ConceptoNota");
                });

            modelBuilder.Entity("DomainLayer.Models.CondicionVentaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CoveCodigo")
                        .HasColumnType("int");

                    b.Property<string>("CoveNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("CondicionVenta");
                });

            modelBuilder.Entity("DomainLayer.Models.CumModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CumsCodigo")
                        .HasColumnType("int");

                    b.Property<int>("CumsConsecutivo")
                        .HasColumnType("int");

                    b.Property<string>("CumsExpediente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CumsNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Cum");
                });

            modelBuilder.Entity("DomainLayer.Models.CupModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CupsCodigo")
                        .HasColumnType("int");

                    b.Property<string>("CupsNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Cup");
                });

            modelBuilder.Entity("DomainLayer.Models.DeptoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DeptoCodigo")
                        .HasColumnType("int");

                    b.Property<string>("DeptoNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Depto");
                });

            modelBuilder.Entity("DomainLayer.Models.DetalleFactModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("DetaCantidad")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("DetaCentroCostos")
                        .HasColumnType("bigint");

                    b.Property<string>("DetaDescripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DetaEmpresaId")
                        .HasColumnType("int");

                    b.Property<string>("DetaFactCodigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DetaFacturaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DetaFechaDespacho")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DetaIva")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("DetaLinea")
                        .HasColumnType("int");

                    b.Property<string>("DetaListaPrecio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DetaListaPreciosId")
                        .HasColumnType("int");

                    b.Property<string>("DetaOrdenCompra")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DetaPorDescuento")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DetaPorcCrf")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DetaPorcIva")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("DetaProducto")
                        .HasColumnType("bigint");

                    b.Property<string>("DetaRemision")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DetaRetefuenteId")
                        .HasColumnType("int");

                    b.Property<int>("DetaTipoImpuestoId")
                        .HasColumnType("int");

                    b.Property<int>("DetaUnidadId")
                        .HasColumnType("int");

                    b.Property<decimal>("DetaValReteIca")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DetaValRf")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DetaValor")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DetaValorUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DetaEmpresaId");

                    b.HasIndex("DetaFacturaId");

                    b.HasIndex("DetaListaPreciosId");

                    b.HasIndex("DetaRetefuenteId");

                    b.HasIndex("DetaTipoImpuestoId");

                    b.HasIndex("DetaUnidadId");

                    b.ToTable("DetalleFact");
                });

            modelBuilder.Entity("DomainLayer.Models.EmpresaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("EmprCelular")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmprCiudad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmprCiuu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmprClasJuridicaId")
                        .HasColumnType("int");

                    b.Property<string>("EmprContacto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmprDepto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmprDiasPago")
                        .HasColumnType("int");

                    b.Property<string>("EmprDireccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmprDv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmprFactContador")
                        .HasColumnType("int");

                    b.Property<string>("EmprFormatoImpr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmprHabilitacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmprIdRepLegal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmprLeyEnFactura")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmprLeyEnNotaCredito")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmprLeyEnNotaDebito")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmprLocalidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmprMail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmprNit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmprNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmprObservaciones")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmprPagWeb")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("EmprPorcReteIca")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("EmprRecepcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmprRegimenId")
                        .HasColumnType("int");

                    b.Property<string>("EmprRepLegal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmprRespFiscalId")
                        .HasColumnType("int");

                    b.Property<int>("EmprRespTributId")
                        .HasColumnType("int");

                    b.Property<string>("EmprTelefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmprTipoClienteId")
                        .HasColumnType("int");

                    b.Property<int>("EmprTipoIdId")
                        .HasColumnType("int");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmprClasJuridicaId");

                    b.HasIndex("EmprRegimenId");

                    b.HasIndex("EmprRespFiscalId");

                    b.HasIndex("EmprRespTributId");

                    b.HasIndex("EmprTipoClienteId");

                    b.HasIndex("EmprTipoIdId");

                    b.ToTable("Empresa");
                });

            modelBuilder.Entity("DomainLayer.Models.EstadoDianFacturaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("EsfaCodigo")
                        .HasColumnType("int");

                    b.Property<string>("EsfaNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("EstadoDianFactura");
                });

            modelBuilder.Entity("DomainLayer.Models.FactSaludTipoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<int>("FasaCodigo")
                        .HasColumnType("int");

                    b.Property<string>("FasaNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("FactSaludTipo");
                });

            modelBuilder.Entity("DomainLayer.Models.FacturaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<int>("FactClaseFacturaId")
                        .HasColumnType("int");

                    b.Property<int>("FactCoberturaId")
                        .HasColumnType("int");

                    b.Property<long>("FactCompartidos")
                        .HasColumnType("bigint");

                    b.Property<int>("FactCondicionVentaId")
                        .HasColumnType("int");

                    b.Property<long>("FactContador")
                        .HasColumnType("bigint");

                    b.Property<string>("FactContrato")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("FactCopago")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("FactCufe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("FactCuotaRecupera")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FactDescGlobal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("FactDespacho")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FactEmpresaId")
                        .HasColumnType("int");

                    b.Property<int>("FactEstadoDianId")
                        .HasColumnType("int");

                    b.Property<int>("FactEstadoOperacion")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FactFecha")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FactFechaFinal")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FactFechaInicio")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FactFechaTrm")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FactFechaVence")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int>("FactFormaPagoId")
                        .HasColumnType("int");

                    b.Property<int>("FactFormatoImpresionId")
                        .HasColumnType("int");

                    b.Property<int>("FactListaPreciosId")
                        .HasColumnType("int");

                    b.Property<string>("FactModalidadPago")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("FactModeradora")
                        .HasColumnType("bigint");

                    b.Property<int>("FactMonedaId")
                        .HasColumnType("int");

                    b.Property<int>("FactNotaCreditoId")
                        .HasColumnType("int");

                    b.Property<int>("FactNotaDebitoId")
                        .HasColumnType("int");

                    b.Property<string>("FactNumero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FactObservaciones")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FactOperador")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FactOrden")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FactPoliza")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FactPorcIva")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FactRecepcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FactRemision")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FactSaludTipoId")
                        .HasColumnType("int");

                    b.Property<decimal>("FactSubtotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("FactSucursal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FactTipoDescuentoId")
                        .HasColumnType("int");

                    b.Property<int>("FactTipoDocElectrId")
                        .HasColumnType("int");

                    b.Property<decimal>("FactTotalIva")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("FactTotalReteIca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FactTrm")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("FactValAnticipo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("FactValTotRetefuente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("FactValor")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FactValorDescuento")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("FactVendedor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FactClaseFacturaId");

                    b.HasIndex("FactCoberturaId");

                    b.HasIndex("FactCondicionVentaId");

                    b.HasIndex("FactEmpresaId");

                    b.HasIndex("FactEstadoDianId");

                    b.HasIndex("FactFormaPagoId");

                    b.HasIndex("FactFormatoImpresionId");

                    b.HasIndex("FactListaPreciosId");

                    b.HasIndex("FactMonedaId");

                    b.HasIndex("FactNotaCreditoId");

                    b.HasIndex("FactNotaDebitoId");

                    b.HasIndex("FactSaludTipoId");

                    b.HasIndex("FactTipoDescuentoId");

                    b.HasIndex("FactTipoDocElectrId");

                    b.ToTable("Factura");
                });

            modelBuilder.Entity("DomainLayer.Models.FormaPagoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("FopaCodigo")
                        .HasColumnType("int");

                    b.Property<string>("FopaNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FormaPago");
                });

            modelBuilder.Entity("DomainLayer.Models.FormatoImpresionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("FormCodigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FormEmpresaId")
                        .HasColumnType("int");

                    b.Property<string>("FormNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FormEmpresaId");

                    b.ToTable("FormatoImpresion");
                });

            modelBuilder.Entity("DomainLayer.Models.ImpuestoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("ImpuCodigo")
                        .HasColumnType("int");

                    b.Property<int>("ImpuEstadoOperacion")
                        .HasColumnType("int");

                    b.Property<string>("ImpuNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImpuOperacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ImpuPorcentaje")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Impuesto");
                });

            modelBuilder.Entity("DomainLayer.Models.IumModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IumCodigo")
                        .HasColumnType("int");

                    b.Property<string>("IumNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IumUnidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ium");
                });

            modelBuilder.Entity("DomainLayer.Models.ListaPrecioModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("LiprDescripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("LiprDescuento")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("LiprEmpresaId")
                        .HasColumnType("int");

                    b.Property<int>("LiprEstadoOperacion")
                        .HasColumnType("int");

                    b.Property<string>("LiprNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LiprProductoId")
                        .HasColumnType("int");

                    b.Property<decimal>("LiprValor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("LiprEmpresaId");

                    b.HasIndex("LiprProductoId");

                    b.ToTable("ListaPrecio");
                });

            modelBuilder.Entity("DomainLayer.Models.LocalidadModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("LocaCiudadId")
                        .HasColumnType("int");

                    b.Property<int>("LocaCodigo")
                        .HasColumnType("int");

                    b.Property<int>("LocaDeptoId")
                        .HasColumnType("int");

                    b.Property<string>("LocaNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LocaCiudadId");

                    b.HasIndex("LocaDeptoId");

                    b.ToTable("Localidad");
                });

            modelBuilder.Entity("DomainLayer.Models.ModalidadPagoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("MopaCodigo")
                        .HasColumnType("int");

                    b.Property<string>("MopaNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ModalidadPago");
                });

            modelBuilder.Entity("DomainLayer.Models.MonedaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("MoneCodigo")
                        .HasColumnType("int");

                    b.Property<string>("MoneNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Moneda");
                });

            modelBuilder.Entity("DomainLayer.Models.NotaCreditoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("NocrConceptoNotaId")
                        .HasColumnType("int");

                    b.Property<int>("NocrEmpresaId")
                        .HasColumnType("int");

                    b.Property<long>("NocrFactura")
                        .HasColumnType("bigint");

                    b.Property<string>("NocrMotivo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NocrNumero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("NocrValor")
                        .HasColumnType("bigint");

                    b.Property<decimal>("NocrValorIva")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("NocrConceptoNotaId");

                    b.HasIndex("NocrEmpresaId");

                    b.ToTable("NotaCredito");
                });

            modelBuilder.Entity("DomainLayer.Models.NotaDebitoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("NodbConceptoNotaId")
                        .HasColumnType("int");

                    b.Property<int>("NodbEmpresaId")
                        .HasColumnType("int");

                    b.Property<long>("NodbFactura")
                        .HasColumnType("bigint");

                    b.Property<string>("NodbMotivo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NodbNumero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("NodbValor")
                        .HasColumnType("bigint");

                    b.Property<decimal>("NodbValorIva")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("NodbConceptoNotaId");

                    b.HasIndex("NodbEmpresaId");

                    b.ToTable("NotaDebito");
                });

            modelBuilder.Entity("DomainLayer.Models.NumeracionResolucionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("NureCodigo")
                        .HasColumnType("int");

                    b.Property<int>("NureNumeracionActual")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("NumeracionResolucion");
                });

            modelBuilder.Entity("DomainLayer.Models.PaisModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("PaisCodigo")
                        .HasColumnType("int");

                    b.Property<string>("PaisNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pais");
                });

            modelBuilder.Entity("DomainLayer.Models.ProductoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProdCentroCostoId")
                        .HasColumnType("int");

                    b.Property<int>("ProdCodReteFuenteId")
                        .HasColumnType("int");

                    b.Property<string>("ProdCodigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProdCumId")
                        .HasColumnType("int");

                    b.Property<int>("ProdCupId")
                        .HasColumnType("int");

                    b.Property<int>("ProdEmpresaId")
                        .HasColumnType("int");

                    b.Property<int>("ProdIumId")
                        .HasColumnType("int");

                    b.Property<int>("ProdListaPrecio")
                        .HasColumnType("int");

                    b.Property<string>("ProdMarca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProdModelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProdNombreFactura")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProdNombreTecnico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProdTipoCupId")
                        .HasColumnType("int");

                    b.Property<int>("ProdTipoImpuestoId")
                        .HasColumnType("int");

                    b.Property<int>("ProdTipoRipsId")
                        .HasColumnType("int");

                    b.Property<string>("ProdUnidadHomologa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProdUnidadId")
                        .HasColumnType("int");

                    b.Property<decimal>("ProdValor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ProdCentroCostoId");

                    b.HasIndex("ProdCodReteFuenteId");

                    b.HasIndex("ProdCumId");

                    b.HasIndex("ProdCupId");

                    b.HasIndex("ProdEmpresaId");

                    b.HasIndex("ProdIumId");

                    b.HasIndex("ProdTipoCupId");

                    b.HasIndex("ProdTipoImpuestoId");

                    b.HasIndex("ProdTipoRipsId");

                    b.HasIndex("ProdUnidadId");

                    b.ToTable("Producto");
                });

            modelBuilder.Entity("DomainLayer.Models.RegimenModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("RegiCodigo")
                        .HasColumnType("int");

                    b.Property<int>("RegiEstadoOperacion")
                        .HasColumnType("int");

                    b.Property<string>("RegiNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Regimen");
                });

            modelBuilder.Entity("DomainLayer.Models.RespFiscalModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("RefiCodigo")
                        .HasColumnType("int");

                    b.Property<string>("RefiNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RespFiscal");
                });

            modelBuilder.Entity("DomainLayer.Models.RespTributariaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("RetrCodigo")
                        .HasColumnType("int");

                    b.Property<string>("RetrNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RespTributaria");
                });

            modelBuilder.Entity("DomainLayer.Models.ReteFuenteModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReteCodigo")
                        .HasColumnType("int");

                    b.Property<string>("ReteNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("RetePorcentaje")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("ReteFuente");
                });

            modelBuilder.Entity("DomainLayer.Models.RolModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("RolCodigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RolDescripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Rol");
                });

            modelBuilder.Entity("DomainLayer.Models.RolUsuarioModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("RousRolId")
                        .HasColumnType("int");

                    b.Property<int>("RousUsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RousRolId");

                    b.HasIndex("RousUsuarioId");

                    b.ToTable("RolUsuario");
                });

            modelBuilder.Entity("DomainLayer.Models.TipoArchivoRipsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ArriCodigo")
                        .HasColumnType("int");

                    b.Property<string>("ArriNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TipoArchivoRips");
                });

            modelBuilder.Entity("DomainLayer.Models.TipoClienteModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("TiclCodigo")
                        .HasColumnType("int");

                    b.Property<string>("TiclNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoCliente");
                });

            modelBuilder.Entity("DomainLayer.Models.TipoCupModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("TicuCodigo")
                        .HasColumnType("int");

                    b.Property<string>("TicuNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoCup");
                });

            modelBuilder.Entity("DomainLayer.Models.TipoDescuentoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("TideCodigo")
                        .HasColumnType("int");

                    b.Property<string>("TideNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoDescuento");
                });

            modelBuilder.Entity("DomainLayer.Models.TipoDocElectrModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("TidoCodigo")
                        .HasColumnType("int");

                    b.Property<string>("TidoNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoDocElectr");
                });

            modelBuilder.Entity("DomainLayer.Models.TipoIdModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("TiidCodigo")
                        .HasColumnType("int");

                    b.Property<string>("TiidNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoId");
                });

            modelBuilder.Entity("DomainLayer.Models.UnidadModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("UnidCodigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnidCodigoDian")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UnidEmpresaId")
                        .HasColumnType("int");

                    b.Property<string>("UnidNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UnidEmpresaId");

                    b.ToTable("Unidad");
                });

            modelBuilder.Entity("DomainLayer.Models.UsuarioModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("UsuEmpresaId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuaIntentos")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("UsuaPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuaUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UsuEmpresaId");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("DomainLayer.Models.VendedorModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("VendCodigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VendEmpresaId")
                        .HasColumnType("int");

                    b.Property<string>("VendNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendTipoDoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("VendEmpresaId");

                    b.ToTable("Vendedor");
                });

            modelBuilder.Entity("DomainLayer.Models.CentroCostoModel", b =>
                {
                    b.HasOne("DomainLayer.Models.EmpresaModel", "CcosEmpresa")
                        .WithMany("EmprCentroCostos")
                        .HasForeignKey("CcosEmpresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CcosEmpresa");
                });

            modelBuilder.Entity("DomainLayer.Models.CiudadModel", b =>
                {
                    b.HasOne("DomainLayer.Models.DeptoModel", "CiudDepto")
                        .WithMany("DeptoCiudades")
                        .HasForeignKey("CiudDeptoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CiudDepto");
                });

            modelBuilder.Entity("DomainLayer.Models.DetalleFactModel", b =>
                {
                    b.HasOne("DomainLayer.Models.EmpresaModel", "DetaEmpresa")
                        .WithMany("EmprDetFacturas")
                        .HasForeignKey("DetaEmpresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DomainLayer.Models.FacturaModel", "DetaFactura")
                        .WithMany("FactDetFacturas")
                        .HasForeignKey("DetaFacturaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DomainLayer.Models.ListaPrecioModel", "DetaListaPrecios")
                        .WithMany("LiprDetFacturas")
                        .HasForeignKey("DetaListaPreciosId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DomainLayer.Models.ReteFuenteModel", "DetaRetefuente")
                        .WithMany("ReteDetFacturas")
                        .HasForeignKey("DetaRetefuenteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DomainLayer.Models.ImpuestoModel", "DetaTipoImpuesto")
                        .WithMany("ImpuDetFacturas")
                        .HasForeignKey("DetaTipoImpuestoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DomainLayer.Models.UnidadModel", "DetaUnidad")
                        .WithMany("UnidDetFacturas")
                        .HasForeignKey("DetaUnidadId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DetaEmpresa");

                    b.Navigation("DetaFactura");

                    b.Navigation("DetaListaPrecios");

                    b.Navigation("DetaRetefuente");

                    b.Navigation("DetaTipoImpuesto");

                    b.Navigation("DetaUnidad");
                });

            modelBuilder.Entity("DomainLayer.Models.EmpresaModel", b =>
                {
                    b.HasOne("DomainLayer.Models.ClasJuridicaModel", "EmprClasJuridica")
                        .WithMany("JuriEmpresas")
                        .HasForeignKey("EmprClasJuridicaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DomainLayer.Models.RegimenModel", "EmprRegimen")
                        .WithMany("RegiEmpresas")
                        .HasForeignKey("EmprRegimenId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DomainLayer.Models.RespFiscalModel", "EmprRespFiscal")
                        .WithMany("RefiEmpresas")
                        .HasForeignKey("EmprRespFiscalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DomainLayer.Models.RespTributariaModel", "EmprRespTribut")
                        .WithMany("RetrEmpresas")
                        .HasForeignKey("EmprRespTributId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DomainLayer.Models.TipoClienteModel", "EmprTipoCliente")
                        .WithMany("TiclEmpresas")
                        .HasForeignKey("EmprTipoClienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DomainLayer.Models.TipoIdModel", "EmprTipoId")
                        .WithMany("TiidEmpresas")
                        .HasForeignKey("EmprTipoIdId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("EmprClasJuridica");

                    b.Navigation("EmprRegimen");

                    b.Navigation("EmprRespFiscal");

                    b.Navigation("EmprRespTribut");

                    b.Navigation("EmprTipoCliente");

                    b.Navigation("EmprTipoId");
                });

            modelBuilder.Entity("DomainLayer.Models.FacturaModel", b =>
                {
                    b.HasOne("DomainLayer.Models.ClaseFacturaModel", "FactClaseFactura")
                        .WithMany("ClfaFacturas")
                        .HasForeignKey("FactClaseFacturaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DomainLayer.Models.CoberturaModel", "FactCobertura")
                        .WithMany("CobeFacturas")
                        .HasForeignKey("FactCoberturaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DomainLayer.Models.CondicionVentaModel", "FactCondicionVenta")
                        .WithMany("CoveFacturas")
                        .HasForeignKey("FactCondicionVentaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DomainLayer.Models.EmpresaModel", "FactEmpresa")
                        .WithMany("EmprFacturas")
                        .HasForeignKey("FactEmpresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DomainLayer.Models.EstadoDianFacturaModel", "FactEstadoDian")
                        .WithMany("EsfaFacturas")
                        .HasForeignKey("FactEstadoDianId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DomainLayer.Models.FormaPagoModel", "FactFormaPago")
                        .WithMany("FopaFacturas")
                        .HasForeignKey("FactFormaPagoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DomainLayer.Models.FormatoImpresionModel", "FactFormatoImpresion")
                        .WithMany("FormFacturas")
                        .HasForeignKey("FactFormatoImpresionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DomainLayer.Models.ListaPrecioModel", "FactListaPrecios")
                        .WithMany("LiprFacturas")
                        .HasForeignKey("FactListaPreciosId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DomainLayer.Models.MonedaModel", "FactMoneda")
                        .WithMany("MoneFacturas")
                        .HasForeignKey("FactMonedaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DomainLayer.Models.NotaCreditoModel", "FactNotaCredito")
                        .WithMany("NocrFacturas")
                        .HasForeignKey("FactNotaCreditoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DomainLayer.Models.NotaDebitoModel", "FactNotaDebito")
                        .WithMany("NodbFacturas")
                        .HasForeignKey("FactNotaDebitoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DomainLayer.Models.FactSaludTipoModel", "FactSaludTipo")
                        .WithMany("FasaFacturas")
                        .HasForeignKey("FactSaludTipoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DomainLayer.Models.TipoDescuentoModel", "FactTipoDescuento")
                        .WithMany("TideFacturas")
                        .HasForeignKey("FactTipoDescuentoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DomainLayer.Models.TipoDocElectrModel", "FactTipoDocElectr")
                        .WithMany("TidoFacturas")
                        .HasForeignKey("FactTipoDocElectrId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FactClaseFactura");

                    b.Navigation("FactCobertura");

                    b.Navigation("FactCondicionVenta");

                    b.Navigation("FactEmpresa");

                    b.Navigation("FactEstadoDian");

                    b.Navigation("FactFormaPago");

                    b.Navigation("FactFormatoImpresion");

                    b.Navigation("FactListaPrecios");

                    b.Navigation("FactMoneda");

                    b.Navigation("FactNotaCredito");

                    b.Navigation("FactNotaDebito");

                    b.Navigation("FactSaludTipo");

                    b.Navigation("FactTipoDescuento");

                    b.Navigation("FactTipoDocElectr");
                });

            modelBuilder.Entity("DomainLayer.Models.FormatoImpresionModel", b =>
                {
                    b.HasOne("DomainLayer.Models.EmpresaModel", "FormEmpresa")
                        .WithMany("EmprFormatosImpresion")
                        .HasForeignKey("FormEmpresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FormEmpresa");
                });

            modelBuilder.Entity("DomainLayer.Models.ListaPrecioModel", b =>
                {
                    b.HasOne("DomainLayer.Models.EmpresaModel", "LiprEmpresa")
                        .WithMany("EmprListaPrecios")
                        .HasForeignKey("LiprEmpresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DomainLayer.Models.ProductoModel", "LiprProducto")
                        .WithMany("ProdListaPrecios")
                        .HasForeignKey("LiprProductoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("LiprEmpresa");

                    b.Navigation("LiprProducto");
                });

            modelBuilder.Entity("DomainLayer.Models.LocalidadModel", b =>
                {
                    b.HasOne("DomainLayer.Models.CiudadModel", "LocaCiudad")
                        .WithMany()
                        .HasForeignKey("LocaCiudadId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DomainLayer.Models.DeptoModel", "LocaDepto")
                        .WithMany()
                        .HasForeignKey("LocaDeptoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("LocaCiudad");

                    b.Navigation("LocaDepto");
                });

            modelBuilder.Entity("DomainLayer.Models.NotaCreditoModel", b =>
                {
                    b.HasOne("DomainLayer.Models.ConceptoNotaModel", "NocrConceptoNota")
                        .WithMany("ConoNotasCredito")
                        .HasForeignKey("NocrConceptoNotaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DomainLayer.Models.EmpresaModel", "NocrEmpresa")
                        .WithMany("EmprNotasCredito")
                        .HasForeignKey("NocrEmpresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("NocrConceptoNota");

                    b.Navigation("NocrEmpresa");
                });

            modelBuilder.Entity("DomainLayer.Models.NotaDebitoModel", b =>
                {
                    b.HasOne("DomainLayer.Models.ConceptoNotaModel", "NodbConceptoNota")
                        .WithMany("ConoNotasDebito")
                        .HasForeignKey("NodbConceptoNotaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DomainLayer.Models.EmpresaModel", "NodbEmpresa")
                        .WithMany("EmprNotasDebito")
                        .HasForeignKey("NodbEmpresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("NodbConceptoNota");

                    b.Navigation("NodbEmpresa");
                });

            modelBuilder.Entity("DomainLayer.Models.ProductoModel", b =>
                {
                    b.HasOne("DomainLayer.Models.CentroCostoModel", "ProdCentroCosto")
                        .WithMany("CcosProductos")
                        .HasForeignKey("ProdCentroCostoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DomainLayer.Models.ReteFuenteModel", "ProdCodReteFuente")
                        .WithMany("ReteProductos")
                        .HasForeignKey("ProdCodReteFuenteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DomainLayer.Models.CumModel", "ProdCum")
                        .WithMany("CumsProductos")
                        .HasForeignKey("ProdCumId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DomainLayer.Models.CupModel", "ProdCup")
                        .WithMany("CupsProductos")
                        .HasForeignKey("ProdCupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DomainLayer.Models.EmpresaModel", "ProdEmpresa")
                        .WithMany("EmprProductos")
                        .HasForeignKey("ProdEmpresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DomainLayer.Models.IumModel", "ProdIum")
                        .WithMany("IumProductos")
                        .HasForeignKey("ProdIumId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DomainLayer.Models.TipoCupModel", "ProdTipoCup")
                        .WithMany("TicuProductos")
                        .HasForeignKey("ProdTipoCupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DomainLayer.Models.ImpuestoModel", "ProdTipoImpuesto")
                        .WithMany("ImpuProductos")
                        .HasForeignKey("ProdTipoImpuestoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DomainLayer.Models.TipoArchivoRipsModel", "ProdTipoRips")
                        .WithMany("ArriProductos")
                        .HasForeignKey("ProdTipoRipsId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DomainLayer.Models.UnidadModel", "ProdUnidad")
                        .WithMany("UnidProductos")
                        .HasForeignKey("ProdUnidadId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ProdCentroCosto");

                    b.Navigation("ProdCodReteFuente");

                    b.Navigation("ProdCum");

                    b.Navigation("ProdCup");

                    b.Navigation("ProdEmpresa");

                    b.Navigation("ProdIum");

                    b.Navigation("ProdTipoCup");

                    b.Navigation("ProdTipoImpuesto");

                    b.Navigation("ProdTipoRips");

                    b.Navigation("ProdUnidad");
                });

            modelBuilder.Entity("DomainLayer.Models.RolUsuarioModel", b =>
                {
                    b.HasOne("DomainLayer.Models.RolModel", "RousRol")
                        .WithMany()
                        .HasForeignKey("RousRolId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DomainLayer.Models.UsuarioModel", "RousUsuario")
                        .WithMany()
                        .HasForeignKey("RousUsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("RousRol");

                    b.Navigation("RousUsuario");
                });

            modelBuilder.Entity("DomainLayer.Models.UnidadModel", b =>
                {
                    b.HasOne("DomainLayer.Models.EmpresaModel", "UnidEmpresa")
                        .WithMany()
                        .HasForeignKey("UnidEmpresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("UnidEmpresa");
                });

            modelBuilder.Entity("DomainLayer.Models.UsuarioModel", b =>
                {
                    b.HasOne("DomainLayer.Models.EmpresaModel", "UsuEmpresa")
                        .WithMany()
                        .HasForeignKey("UsuEmpresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("UsuEmpresa");
                });

            modelBuilder.Entity("DomainLayer.Models.VendedorModel", b =>
                {
                    b.HasOne("DomainLayer.Models.EmpresaModel", "VendEmpresa")
                        .WithMany("EmprVendedores")
                        .HasForeignKey("VendEmpresaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("VendEmpresa");
                });

            modelBuilder.Entity("DomainLayer.Models.CentroCostoModel", b =>
                {
                    b.Navigation("CcosProductos");
                });

            modelBuilder.Entity("DomainLayer.Models.ClaseFacturaModel", b =>
                {
                    b.Navigation("ClfaFacturas");
                });

            modelBuilder.Entity("DomainLayer.Models.ClasJuridicaModel", b =>
                {
                    b.Navigation("JuriEmpresas");
                });

            modelBuilder.Entity("DomainLayer.Models.CoberturaModel", b =>
                {
                    b.Navigation("CobeFacturas");
                });

            modelBuilder.Entity("DomainLayer.Models.ConceptoNotaModel", b =>
                {
                    b.Navigation("ConoNotasCredito");

                    b.Navigation("ConoNotasDebito");
                });

            modelBuilder.Entity("DomainLayer.Models.CondicionVentaModel", b =>
                {
                    b.Navigation("CoveFacturas");
                });

            modelBuilder.Entity("DomainLayer.Models.CumModel", b =>
                {
                    b.Navigation("CumsProductos");
                });

            modelBuilder.Entity("DomainLayer.Models.CupModel", b =>
                {
                    b.Navigation("CupsProductos");
                });

            modelBuilder.Entity("DomainLayer.Models.DeptoModel", b =>
                {
                    b.Navigation("DeptoCiudades");
                });

            modelBuilder.Entity("DomainLayer.Models.EmpresaModel", b =>
                {
                    b.Navigation("EmprCentroCostos");

                    b.Navigation("EmprDetFacturas");

                    b.Navigation("EmprFacturas");

                    b.Navigation("EmprFormatosImpresion");

                    b.Navigation("EmprListaPrecios");

                    b.Navigation("EmprNotasCredito");

                    b.Navigation("EmprNotasDebito");

                    b.Navigation("EmprProductos");

                    b.Navigation("EmprVendedores");
                });

            modelBuilder.Entity("DomainLayer.Models.EstadoDianFacturaModel", b =>
                {
                    b.Navigation("EsfaFacturas");
                });

            modelBuilder.Entity("DomainLayer.Models.FactSaludTipoModel", b =>
                {
                    b.Navigation("FasaFacturas");
                });

            modelBuilder.Entity("DomainLayer.Models.FacturaModel", b =>
                {
                    b.Navigation("FactDetFacturas");
                });

            modelBuilder.Entity("DomainLayer.Models.FormaPagoModel", b =>
                {
                    b.Navigation("FopaFacturas");
                });

            modelBuilder.Entity("DomainLayer.Models.FormatoImpresionModel", b =>
                {
                    b.Navigation("FormFacturas");
                });

            modelBuilder.Entity("DomainLayer.Models.ImpuestoModel", b =>
                {
                    b.Navigation("ImpuDetFacturas");

                    b.Navigation("ImpuProductos");
                });

            modelBuilder.Entity("DomainLayer.Models.IumModel", b =>
                {
                    b.Navigation("IumProductos");
                });

            modelBuilder.Entity("DomainLayer.Models.ListaPrecioModel", b =>
                {
                    b.Navigation("LiprDetFacturas");

                    b.Navigation("LiprFacturas");
                });

            modelBuilder.Entity("DomainLayer.Models.MonedaModel", b =>
                {
                    b.Navigation("MoneFacturas");
                });

            modelBuilder.Entity("DomainLayer.Models.NotaCreditoModel", b =>
                {
                    b.Navigation("NocrFacturas");
                });

            modelBuilder.Entity("DomainLayer.Models.NotaDebitoModel", b =>
                {
                    b.Navigation("NodbFacturas");
                });

            modelBuilder.Entity("DomainLayer.Models.ProductoModel", b =>
                {
                    b.Navigation("ProdListaPrecios");
                });

            modelBuilder.Entity("DomainLayer.Models.RegimenModel", b =>
                {
                    b.Navigation("RegiEmpresas");
                });

            modelBuilder.Entity("DomainLayer.Models.RespFiscalModel", b =>
                {
                    b.Navigation("RefiEmpresas");
                });

            modelBuilder.Entity("DomainLayer.Models.RespTributariaModel", b =>
                {
                    b.Navigation("RetrEmpresas");
                });

            modelBuilder.Entity("DomainLayer.Models.ReteFuenteModel", b =>
                {
                    b.Navigation("ReteDetFacturas");

                    b.Navigation("ReteProductos");
                });

            modelBuilder.Entity("DomainLayer.Models.TipoArchivoRipsModel", b =>
                {
                    b.Navigation("ArriProductos");
                });

            modelBuilder.Entity("DomainLayer.Models.TipoClienteModel", b =>
                {
                    b.Navigation("TiclEmpresas");
                });

            modelBuilder.Entity("DomainLayer.Models.TipoCupModel", b =>
                {
                    b.Navigation("TicuProductos");
                });

            modelBuilder.Entity("DomainLayer.Models.TipoDescuentoModel", b =>
                {
                    b.Navigation("TideFacturas");
                });

            modelBuilder.Entity("DomainLayer.Models.TipoDocElectrModel", b =>
                {
                    b.Navigation("TidoFacturas");
                });

            modelBuilder.Entity("DomainLayer.Models.TipoIdModel", b =>
                {
                    b.Navigation("TiidEmpresas");
                });

            modelBuilder.Entity("DomainLayer.Models.UnidadModel", b =>
                {
                    b.Navigation("UnidDetFacturas");

                    b.Navigation("UnidProductos");
                });
#pragma warning restore 612, 618
        }
    }
}
